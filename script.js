–∏ —Å–∫—Ä–∏–ø—Ç // ===== –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã/—ç–ª–µ–º–µ–Ω—Ç—ã
const header = document.querySelector("header");
const burger = document.getElementById("burger");
const menu = document.getElementById("menu");
const yearEl = document.getElementById("year");
const form = document.getElementById("contact-form");
const formMsg = document.getElementById("form-msg");

// ===== –ì–æ–¥ –≤ —Ñ—É—Ç–µ—Ä–µ
if (yearEl) yearEl.textContent = new Date().getFullYear();

// ===== –¢–µ–Ω—å —É —à–∞–ø–∫–∏ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
const onScrollHeaderShadow = () => {
  if (window.scrollY > 4) {
    header?.classList.add("header--shadow");
  } else {
    header?.classList.remove("header--shadow");
  }
};
onScrollHeaderShadow();
window.addEventListener("scroll", onScrollHeaderShadow, { passive: true });

// ===== –ë—É—Ä–≥–µ—Ä-–º–µ–Ω—é (–º–æ–±–∞–π–ª)
const toggleMenu = () => {
  menu?.classList.toggle("hidden");         // Tailwind: –ø–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å
  document.body.classList.toggle("no-scroll"); // –ó–∞–ø—Ä–µ—Ç –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –ø–æ–¥ –º–µ–Ω—é
  // –º–µ–Ω—è–µ–º —Å–∏–º–≤–æ–ª –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
  if (burger) burger.textContent = menu?.classList.contains("hidden") ? "‚ò∞" : "‚úï";
};
burger?.addEventListener("click", toggleMenu);

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Å—Å—ã–ª–∫—É
menu?.querySelectorAll('a[href^="#"]').forEach((a) => {
  a.addEventListener("click", () => {
    if (window.innerWidth < 768 && !menu.classList.contains("hidden")) {
      toggleMenu();
    }
  });
});

// ===== –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª —Å —É—á—ë—Ç–æ–º –≤—ã—Å–æ—Ç—ã —à–∞–ø–∫–∏
const HEADER_OFFSET = 72; // ~ h-16 (64px) + –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–∑–æ—Ä
document.querySelectorAll('a[href^="#"]').forEach((a) => {
  a.addEventListener("click", (e) => {
    const id = a.getAttribute("href");
    if (!id  id === "#"  id.length < 2) return;
    const target = document.querySelector(id);
    if (!target) return;
    e.preventDefault();
    const rect = target.getBoundingClientRect();
    const top = window.scrollY + rect.top - HEADER_OFFSET;
    window.scrollTo({ top, behavior: "smooth" });
    // –û–±–Ω–æ–≤–∏–º hash –≤ –∞–¥—Ä–µ—Å–µ (–±–µ–∑ —Ä–µ–∑–∫–æ–≥–æ –ø—Ä—ã–∂–∫–∞)
    history.pushState(null, "", id);
  });
});

// ===== FAQ: –¥–µ–ª–∞–µ–º –∞–∫–∫–æ—Ä–¥–µ–æ–Ω (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ—Ç–∫—Ä—ã—Ç)
const faqRoot = document.getElementById("faq-list");
if (faqRoot) {
  const items = faqRoot.querySelectorAll("details");
  items.forEach((el) => {
    el.addEventListener("toggle", () => {
      if (el.open) {
        items.forEach((other) => other !== el && (other.open = false));
      }
    });
  });
}

// ===== –ê–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–µ–∫—Ü–∏–π (IntersectionObserver)
const observer = new IntersectionObserver(
  (entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("is-visible");
        observer.unobserve(entry.target);
      }
    });
  },
  { threshold: 0.15 }
);

// –ü–æ–º–µ—Ç–∏–º –∫—Ä—É–ø–Ω—ã–µ –±–ª–æ–∫–∏ –¥–ª—è reveal
document.querySelectorAll("section, .card, article, figure, .rounded-2xl").forEach((el) => {
  el.classList.add("reveal");
  observer.observe(el);
});

// ===== –§–æ—Ä–º–∞ (–¥–µ–º–æ-–æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏)
form?.addEventListener("submit", (e) => {
  e.preventDefault();
  if (formMsg) {
    formMsg.textContent = "–°–ø–∞—Å–∏–±–æ! –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ üöÄ";
    formMsg.style.color = "rgb(2,132,199)";
  }
  form.reset();
});
